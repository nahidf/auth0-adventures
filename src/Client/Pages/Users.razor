@page "/users"
@attribute [Authorize]

@using System.Net.Http.Headers;
@using System.Net.Http.Json;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using Client.Services;

@inject UserService UserService
@inject IAccessTokenProvider TokenProvider

<h1>Users</h1>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Latest Login</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td>@user.LatestLogin.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<UserModel> users;

    protected override async Task OnInitializedAsync()
    {
        var tokenResult = await TokenProvider.RequestAccessToken();

        if (tokenResult.TryGetToken(out var token))
        {
            users = await UserService.GetUsersAsync(token.Value);
        }
    }
}
